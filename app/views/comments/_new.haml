- comment_form_for(form_url) do |f|
  = hidden_field_tag :original_controller, controller_name
  .body.text_area
    = comment_text_area(f, target)
    = autoresize :comment_body
    #comment_body_list.autocomplete{:style => 'display:none'}
    .previewBox.textilized{:style => 'display:none'}
  .extra
    - if comment.project
      = the_comment_upload_link(comment)
      = upload_area(comment)
    - if target
      = last_comment_input
      - if target.is_a?(Task)
        = add_hours_link(f)
        .statuses
          = f.label :status
          - if target.status_new?
            .status.new#status_new
              = f.radio_button :status, Task::STATUSES[:new]
              = t('tasks.status.new')
          .status.open#status_open
            = f.radio_button :status, Task::STATUSES[:open]
            = t('tasks.status.open')
            - f.fields_for :target, target do |task_form|
              = task_form.label :assigned_id, t('.assigned_to')
              = task_form.select :assigned_id, options_for_people(comment.project.people)
          .status.hold#status_hold
            = f.radio_button :status, Task::STATUSES[:hold]
            = t('tasks.status.hold')
          .status.resolved#status_resolved
            = f.radio_button :status, Task::STATUSES[:resolved]
            = t('tasks.status.resolved')
          .status.rejected#status_rejected
            = f.radio_button :status, Task::STATUSES[:rejected]
            = t('tasks.status.rejected')
          = javascript_tag "$$('.statuses input').each(function(e){ if (e.checked) { e.up('.status').addClassName('active') }; })"
          = javascript_tag "Comment.watch_status();"
    .submit{ :id => js_id(:new_submit,Comment.new) }
      %span.showPreview
        %button{}
          %span.default= "Preview"
          %span.showing{:style => "display:none"}= "..."
        %a{:href => '#', :style => 'display:none'}= "Close"
      = f.submit t('.submit')
    = loading_image(js_id(:new_loading,Comment.new))
    .clear

= javascript_tag "$('new_comment').auto_focus()"
= make_autocompletable('comment_body')
